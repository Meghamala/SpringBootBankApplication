services:
#  rabbit: # for msg broadcasting, need to run rabbit service docker
#    image: rabbitmq:3.12-management
#    hostname: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    healthcheck:
#      test: rabbitmq-diagnostics check_port_connectivity
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 5s
#    extends:
#      file: common-config.yml
#      service: network-deploy-service
#  accountsdb:
#    container_name: accountsdb
#    ports:
#      - 3306:3306
#    environment:
#      MYSQL_DATABASE: accountsdb
#    extends:
#      file: common-config.yml
#      service: microservice-db-config
#
#  cardsdb:
#    container_name: cardsdb
#    ports:
#      - 3307:3306
#    environment:
#      MYSQL_DATABASE: cardsdb
#    extends:
#      file: common-config.yml
#      service: microservice-db-config
#
#  loansdb:
#    container_name: loansdb
#    ports:
#      - 3308:3306
#    environment:
#      MYSQL_DATABASE: loansdb
#    extends:
#      file: common-config.yml
#      service: microservice-db-config

  configserver:
    image: "meghamala228/configserver:7"
    container_name: configserver-ms
    ports:
      - "8071:8071"
#    depends_on: # config server depends on rabbit
#      rabbit:
#        condition: service_healthy
    healthcheck: # to check if service is started or not
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "meghamala228/eurekaserver:5"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    healthcheck: # to check if service is started or not
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

  accounts:
    image: "meghamala228/accounts:5"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    healthcheck: # to check if service is started or not
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment: # linking client to server
      SPRING_APPLICATION_NAME: "accounts"
#      SPRING_DATASOURCE_URL: "jdbc:mysql://accountsdb:3306/accountsdb"
#    depends_on:
#      accountsdb:
#        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

  cards:
    image: "meghamala228/cards:5"
    container_name: cards-ms
    ports:
      - "9000:9000"
    healthcheck: # to check if service is started or not
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "cards"
#      SPRING_DATASOURCE_URL: "jdbc:mysql://cardsdb:3306/cardsdb"
#    depends_on:
#      cardsdb:
#        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

  loans:
    image: "meghamala228/loans:5"
    container_name: loans-ms
    ports:
      - "8090:8090"
    healthcheck: # to check if service is started or not
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "loans"
#      SPRING_DATASOURCE_URL: "jdbc:mysql://loansdb:3306/loansdb"
#    depends_on:
#      loansdb:
#        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config

  gatewayserver:
    image: "meghamala228/gatewayserver:5"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on: # it depends on all 3 MS
      accounts:
        condition: service_healthy
      cards:
        condition: service_healthy
      loans:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eurekaserver-config
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"

networks:
  springbank:
    driver: "bridge"